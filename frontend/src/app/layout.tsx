import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { AuthProvider } from '@/context/AuthContext'
import { LoaderProvider } from '@/context/LoaderContext';
import GlobalLoader from '@/app/components/GlobarLoader';


const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <LoaderProvider>
      <GlobalLoader />

      <html lang="en">
        <body
          className={`${geistSans.variable} ${geistMono.variable} antialiased`}
        >
          <AuthProvider>
            {children}
          </AuthProvider>
        </body>
      </html>

    </LoaderProvider>
  );
}




// 'use client';  

// import { usePathname } from 'next/navigation';
// import AuthLayout from './layouts/AuthLayout';
// import DashboardLayout from './layouts/DashboardLayout';
// import MarketingLayout from './layouts/MarketingLayout';

// export default function RootLayout({ children }: { children: React.ReactNode }) {
//   const pathname = usePathname();

//   let Layout = ({ children }: { children: React.ReactNode }) => <>{children}</>;

//   if (pathname.startsWith('/auth')) {
//     Layout = AuthLayout;
//   } else if (pathname.startsWith('/dashboard')) {
//     Layout = DashboardLayout;
//   } else if (pathname.startsWith('/marketing')) {
//     Layout = MarketingLayout;
//   }

//   return (
//     <html lang="en">
//       <body>
//         <Layout>
//           {children}
//         </Layout>
//       </body>
//     </html>
//   );
// }
